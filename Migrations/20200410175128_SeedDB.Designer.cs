// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ostosAppi_api.Data;

namespace ostosAppi_api.Migrations
{
    [DbContext(typeof(MvcShoppingListContext))]
    [Migration("20200410175128_SeedDB")]
    partial class SeedDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ostosAppi_api.Models.ShoppingList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("IsDone")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Store")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("ShoppingList");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Created = new DateTime(2020, 4, 10, 20, 51, 28, 562, DateTimeKind.Local).AddTicks(7475),
                            CreatedBy = "DBInit",
                            IsDone = false,
                            Name = "Ostokset1",
                            Store = "Prisma",
                            Updated = new DateTime(2020, 4, 10, 20, 51, 28, 564, DateTimeKind.Local).AddTicks(8497),
                            UpdatedBy = "DBInit"
                        });
                });

            modelBuilder.Entity("ostosAppi_api.Models.ShoppingList", b =>
                {
                    b.OwnsMany("ostosAppi_api.Models.ShoppingItem", "ShoppingItem", b1 =>
                        {
                            b1.Property<int>("ShoppingListId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<double>("Amount")
                                .HasColumnType("double");

                            b1.Property<string>("AmountUnit")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<bool>("IsCollected")
                                .HasColumnType("tinyint(1)");

                            b1.Property<string>("Name")
                                .HasColumnType("longtext CHARACTER SET utf8mb4");

                            b1.Property<double?>("Price")
                                .HasColumnType("double");

                            b1.HasKey("ShoppingListId", "Id");

                            b1.ToTable("ShoppingItem");

                            b1.WithOwner()
                                .HasForeignKey("ShoppingListId");

                            b1.HasData(
                                new
                                {
                                    ShoppingListId = 1,
                                    Id = 2,
                                    Amount = 5.0,
                                    AmountUnit = "kpl",
                                    IsCollected = false,
                                    Name = "Banaani",
                                    Price = 0.0
                                },
                                new
                                {
                                    ShoppingListId = 1,
                                    Id = 3,
                                    Amount = 1.0,
                                    AmountUnit = "kpl",
                                    IsCollected = false,
                                    Name = "Rahka",
                                    Price = 0.0
                                },
                                new
                                {
                                    ShoppingListId = 1,
                                    Id = 4,
                                    Amount = 700.0,
                                    AmountUnit = "g",
                                    IsCollected = false,
                                    Name = "Jauheliha",
                                    Price = 0.0
                                });
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
